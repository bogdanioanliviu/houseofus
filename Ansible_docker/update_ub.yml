---
- hosts: ansible_serv:portatiles
  ignore_unreachable: yes
  become: true
  become_user: root
  vars:
    telegram_token: "{{ tele_token }}"
  tasks:
    - name: Update apt repo and cache on all Debian/Ubuntu boxes
      apt: update_cache=yes force_apt_get=yes cache_valid_time=3600
    - name: Upgrade all packages on servers
      apt: upgrade=dist force_apt_get=yes
    - name: Check if a reboot is needed on all servers
      register: reboot_required_file
      stat: path=/var/run/reboot-required get_md5=no
    - name: Send message to telegram Group if server need reboot
      telegram:
        token: '{{ telegram_token }}'
        chat_id: '-320842825'
        msg: "Trebuie restartat {{ inventory_hostname }}"
      when: reboot_required_file.stat.exists

- hosts: servers
  become: true
  become_user: root
  vars:
    telegram_token: "{{ tele_token }}"
  tasks:
    - name: Update apt repo and cache on all Debian/Ubuntu boxes
      apt:
        update_cache=yes
        force_apt_get=yes
        cache_valid_time=3600
    - name: Upgrade all packages on servers
      apt: upgrade=dist force_apt_get=yes
    - name: Check if a reboot is needed on all servers
      register: reboot_required_file
      stat: path=/var/run/reboot-required get_md5=no
    - name: Reboot the box if kernel updated
      reboot:
        msg: "Reboot initiated by Ansible for kernel updates"
        connect_timeout: 5
        reboot_timeout: 300
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: uptime
      when: reboot_required_file.stat.exists
      register: restart
    - name: Send message to telegram Group if reboot happened
      telegram:
        token: '{{ telegram_token }}'
        chat_id: '-320842825'
        msg: "Sa repornit {{ inventory_hostname }}"
      when: reboot_required_file.stat.exists
    - name: Remove dependencies that are no longer required
      apt: autoremove=yes force_apt_get=yes
    - name: Remove useless packages from cache
      apt: autoclean=yes force_apt_get=yes
