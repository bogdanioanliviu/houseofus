apiVersion: apps/v1
kind: Deployment
metadata:
  name: telegraf
  namespace: tig
spec:
  minReadySeconds: 5
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: telegraf
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        diun.enable: "true"
        diun.include_tags: latest
        diun.watch_repo: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: '9100'
        prometheus.io/scrape: 'true'
      labels:
        app: telegraf
    spec:
      securityContext:
        runAsUser: 977
        runAsGroup: 988
        #fsGroup: 0
        supplementalGroups: [ 0 ]
      containers:
      - name: telegraf
        securityContext:
          runAsUser: 977
        image: telegraf:1.36.3
        imagePullPolicy: "IfNotPresent"
        env:
        - name: TZ
          value: Europe/Madrid
        - name: INFLUX_TOKEN
          valueFrom:
            secretKeyRef:
              name: telegraf-influx
              key: token
        resources:
          limits:
            memory: 120Mi
          requests:
            cpu: 10m
            memory: 40Mi
        ports:
          - containerPort: 9100
            protocol: TCP
            name: metrics
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/telegraf/telegraf.conf
          name: telegraf-config
          readOnly: true
          subPath: telegraf.conf
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      volumes:
      - name: telegraf-config
        persistentVolumeClaim:
          claimName: pvc-telegraf-unifi