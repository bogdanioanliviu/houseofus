apiVersion: apps/v1
kind: Deployment
metadata:
  name: nextcloud
  namespace: nextcloud
  labels:
    app: nextcloud
spec:
  replicas: 1
  revisionHistoryLimit: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: nextcloud
  template:
    metadata:
      labels:
        app: nextcloud
#      annotations:
#        diun.enable: "true"
#        diun.watch_repo: "true"
#        diun.include_tags: "30.0.*;30.1.*"
    spec:
      securityContext:
        runAsUser: 977
        runAsGroup: 988
        #fsGroup: 0
        supplementalGroups: [ 0 ]
      containers:
        - name: nextcloud
          securityContext:
            runAsUser: 977
          image: linuxserver/nextcloud:30.0.4
          imagePullPolicy: "IfNotPresent"
          resources:
            limits:
              memory: "800Mi"
            requests:
              memory: "401Mi"
              cpu: "11m"
          ports:
            - containerPort: 443
              protocol: TCP
              name: https
          env:
            - name: PUID
              value: "977"
            - name: PGID
              value: "988"
            - name: TZ
              value: "Europe/Madrid"
            - name: REDIS_HOST
              value: haproxy.houseofus.eu
            - name: REDIS_PORT
              value: "30413"
            - name: REDIS_PASSWORD
              value: {redispass}
          volumeMounts:
            - mountPath: /config
              name: nextcloud-data
              subPath: nextcloud-config
            - mountPath: /data
              name: nextcloud-data
              subPath: nextcloud-data
            - mountPath:  /var/big_temp_file
              name: cache-volume
      restartPolicy: Always
      volumes:
        - name: nextcloud-data
          persistentVolumeClaim:
            claimName:  pvc-nextcloud-unifi
        - name: cache-volume
          emptyDir:
            sizeLimit: 100Mi