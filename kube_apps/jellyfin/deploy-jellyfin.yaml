---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
  namespace: jellyfin
  labels:
    app: jellyfin
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
      annotations:
        diun.enable: "true"
        diun.watch_repo: "true"
        diun.include_tags: "latest"
        diun.exclude_tags: "*unstable"
    spec:
      securityContext:
        runAsUser: 977
        runAsGroup: 988
        #fsGroup: 0
        supplementalGroups: [ 0 ]
      containers:
        - name: jellyfin
          securityContext:
            runAsUser: 977
          image: docker.io/jellyfin/jellyfin:10.10.5
          imagePullPolicy: "IfNotPresent"
          resources:
            limits:
              memory: "1024Mi"
            requests:
              memory: "300Mi"
              cpu: "17m"
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          ports:
            - name: web
              containerPort: 8096
              protocol: TCP
          volumeMounts:
            - mountPath: /data/media
              name: media
            - mountPath: /config
              name: jellyfin-config
              subPath: config
            - mountPath: /cache
              name: jellyfin-config
              subPath: cache
      restartPolicy: Always
      volumes:
      - name: media
        persistentVolumeClaim:
          claimName: pvc-media-unifi
      - name: jellyfin-config
        persistentVolumeClaim:
          claimName: pvc-jellyfin-unifi